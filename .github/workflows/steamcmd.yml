name: build steamcmd
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - main
      - dev
    paths:
      - steamcmd/**
      - .github/workflows/steamcmd.yml
jobs:
  before_push:
    name: "steamcmd before push"
    runs-on: ubuntu-latest
    steps:
      - name: "test variables"
        shell: bash
        run: |
          echo -e "A: github.event.commits[0]                                  = \"----\""
          echo -e "B: github.event.commits[0].message                          = \"${{ toJSON(github.event.commits[0].message) }}\""
          echo -e "C: github.event.commits[0].message.startsWith('\"[push]')   = \"${{ startsWith(toJSON(github.event.commits[0].message), '"[push]') }}\""
          echo -e "D: github.event.commits[0].message.startsWith('\"[dev]')    = \"${{ startsWith(toJSON(github.event.commits[0].message), '"[dev]') }}\""
          echo -e "E: github.event.commits.*                                   = \"----\""
          echo -e "F: github.event.commits.*.message                           = \"${{ toJSON(github.event.commits.*.message) }}\""
          echo -e "G: github.event.commits.*.message.startsWith('\"[push]')    = \"${{ startsWith(toJSON(github.event.commits.*.message), '"[push]') }}\""
          echo -e "H: github.event.commits.*.message.startsWith('\"[dev]')     = \"${{ startsWith(toJSON(github.event.commits.*.message), '"[dev]') }}\""
          echo -e "0: github.event.commits.*.message[0]                        = \"${{ toJSON(github.event.commits.*.message[0]) }}\""
          echo -e "1: github.event.commits.*.message[0].startsWith('\"[push]') = \"${{ startsWith(toJSON(github.event.commits.*.message[0]), '"[push]') }}\""
          echo -e "2: github.event.commits.*.message[0].startsWith('\"[dev]')  = \"${{ startsWith(toJSON(github.event.commits.*.message[0]), '"[dev]') }}\""
          echo -e "I: github.event_name                                        = \"${{ github.event_name }}\""
          echo -e "J: github.event_name == 'push'                              = \"${{ github.event_name == 'push' }}\""
          echo -e "K: github.event_name == 'workflow_dispatch'                 = \"${{ github.event_name == 'workflow_dispatch' }}\""
          echo -e "\$C || \$D                                                  = \"${{ startsWith(toJSON(github.event.commits[0].message), '"[push]') || startsWith(toJSON(github.event.commits[0].message), '"[dev]') }}\""
          echo -e "\$G || \$H                                                  = \"${{ startsWith(toJSON(github.event.commits.*.message), '"[push]') || startsWith(toJSON(github.event.commits.*.message), '"[dev]') }}\""
          echo -e "\$G || \$H                                                  = \"${{ startsWith(toJSON(github.event.commits.*.message[0]), '"[push]') || startsWith(toJSON(github.event.commits.*.message[0]), '"[dev]') }}\""
          echo -e "\(\$C || \$D\) && \$J                                       = \"${{ ( startsWith(toJSON(github.event.commits[0].message), '"[push]') || startsWith(toJSON(github.event.commits[0].message), '"[dev]') ) && github.event_name == 'push' }}\""
          echo -e "\(\$G || \$H\) && \$J                                       = \"${{ ( startsWith(toJSON(github.event.commits.*.message), '"[push]') || startsWith(toJSON(github.event.commits.*.message), '"[dev]') ) && github.event_name == 'push' }}\""
          echo -e "\(\$G || \$H\) && \$J                                       = \"${{ ( startsWith(toJSON(github.event.commits.*.message[0]), '"[push]') || startsWith(toJSON(github.event.commits.*.message[0]), '"[dev]') ) && github.event_name == 'push' }}\""
          echo -e "\(\(\$C || \$D\) && \$J\) || \$K                            = \"${{ ( ( startsWith(toJSON(github.event.commits[0].message), '"[push]') || startsWith(toJSON(github.event.commits[0].message), '"[dev]') ) && github.event_name == 'push' ) || github.event_name == 'workflow_dispatch' }}\""
          echo -e "\(\(\$G || \$H\) && \$J\) || \$K                            = \"${{ ( ( startsWith(toJSON(github.event.commits.*.message), '"[push]') || startsWith(toJSON(github.event.commits.*.message), '"[dev]') ) && github.event_name == 'push' ) || github.event_name == 'workflow_dispatch' }}\""
          echo -e "\(\(\$G || \$H\) && \$J\) || \$K                            = \"${{ ( ( startsWith(toJSON(github.event.commits.*.message[0]), '"[push]') || startsWith(toJSON(github.event.commits.*.message[0]), '"[dev]') ) && github.event_name == 'push' ) || github.event_name == 'workflow_dispatch' }}\""
  push:
    if: ${{ ( ( startsWith(toJSON(github.event.commits.*.message), '[push]') || startsWith(toJSON(github.event.commits.*.message), '[dev]') ) && github.event_name == 'push' ) || github.event_name == 'workflow_dispatch' }}
    name: "steamcmd:${{ matrix.distro }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - proton
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: ./steamcmd
          file: ./steamcmd/${{ matrix.distro }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/thakyz/steamcmd:${{ matrix.distro }}
