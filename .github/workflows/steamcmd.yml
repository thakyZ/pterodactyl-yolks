name: build steamcmd
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - main
      - dev
    paths:
      - steamcmd/**
      - .github/workflows/steamcmd.yml
jobs:
  before_push:
    name: "steamcmd before push"
    runs-on: ubuntu-latest
    steps:
      - name: "test variables"
        shell: pwsh
        run: |
          $JsonText = '${{ toJSON(github) }}'; # Hamburger
          $Json = ($JsonText | ConvertFrom-Json);
          $JsonAny = $Json.event.commits;
          $JsonZero = $Json.event.commits[0];
          $JsonEvent = $Json.event_name;
          $L = ($JsonAny.event.commits.Length);                        Write-Host "`$L    = $($L)";
          $LC = ($JsonAny.event.commits.Count);                        Write-Host "`$LC   = $($LC)";
          $AN = ($Null -eq $JsonZero.event.commits.message);           Write-Host "`$AN   = $($AN)";
          $A = ($JsonZero.event.commits.message.StartsWith('[push]')); Write-Host "`$A    = $($A)";
          $B = ($JsonZero.event.commits.message.StartsWith('[dev]'));  Write-Host "`$B    = $($B)";
          $C = ($JsonAny.event.commits.message.StartsWith('[push]'));  Write-Host "`$C    = $($C)";
          $D = ($JsonAny.event.commits.message.StartsWith('[dev]'));   Write-Host "`$D    = $($D)";

          $E = ($JsonEvent -eq 'push');                                Write-Host "`$E    = $($E)";
          $F = ($JsonEvent -eq 'workflow_dispatch');                   Write-Host "`$F    = $($F)";
          $AB = ($A -or $B);                                           Write-Host "`$AB   = $($AB)";
          $CD = ($C -or $D);                                           Write-Host "`$CD   = $($CD)";
          $ABE = ($AB -and $E);                                        Write-Host "`$ABE  = $($ABE)";
          $CDE = ($CD -and $E);                                        Write-Host "`$CDE  = $($CDE)";
          $ABEF = ($ABE -or $F);                                       Write-Host "`$ABEF = $($ABEF)";
          $CDEF = ($CDE -or $F);                                       Write-Host "`$CDEF = $($CDEF)";
  push:
    if: ${{ ( ( startsWith(toJSON(github.event.commits.*.message), '[push]') || startsWith(toJSON(github.event.commits.*.message), '[dev]') ) && github.event_name == 'push' ) || github.event_name == 'workflow_dispatch' }}
    name: "steamcmd:${{ matrix.distro }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - proton
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: ./steamcmd
          file: ./steamcmd/${{ matrix.distro }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/thakyz/steamcmd:${{ matrix.distro }}
